plugins {
    id 'distribution'
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
}

allprojects {
    group = 'org.citygml4j'
    version = '3.2.2'
    description = 'The Open Source Java API for CityGML'

    ext {
        gmlObjectsVersion = '1.1.4'
        xalObjectsVersion = '1.1.4'
        xmlObjectsVersion = '1.1.4'
        date = new Date()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'signing'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    tasks.named('compileJava') {
        options.javaModuleVersion = provider { project.version }
    }

    repositories {
        maven {
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
        mavenCentral()
    }

    javadoc {
        options {
            title = "$project.name $project.version"
            header = title
            overview = title
            bottom = file("$rootDir/resources/javadoc/bottom.html").text.replaceAll("@date@", "${date.format('yyyy')}")
            addStringOption('Xdoclint:none', '-quiet')
        }
    }

    jar {
        manifest.attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version
        )
        into('META-INF') {
            from "$rootDir/LICENSE"
        }
    }

    plugins.withType(MavenPublishPlugin) {
        java {
            withJavadocJar()
            withSourcesJar()
        }

        publishing {
            publications {
                mavenJava(MavenPublication) {
                    from components.java
                    pom {
                        name = project.name
                        description = project.description
                        url = 'https://github.com/citygml4j'
                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                                distribution = 'repo'
                            }
                        }
                        developers {
                            developer {
                                id = 'clausnagel'
                                name = 'Claus Nagel'
                                email = 'claus.nagel@gmail.com'
                                roles = ['architect', 'developer']
                                timezone = '+1'
                            }
                        }
                        scm {
                            url = 'https://github.com/citygml4j/citygml4j'
                            connection = 'scm:git:https://github.com/citygml4j/citygml4j.git'
                        }
                    }
                }
            }
        }

        signing {
            required = { !project.hasProperty("skip.signing") }
            sign publishing.publications.mavenJava
        }
    }
}

task allJavadoc(type: Javadoc, group: 'documentation') {
    rootProject.subprojects.each { project ->
        project.tasks.withType(Javadoc).each { javadocTask ->
            source += javadocTask.source
            classpath += javadocTask.classpath
        }
    }

    exclude "**/module-info.java"
    source -= project(':citygml4j-samples').javadoc.source
    destinationDir = file("$projectDir/build/docs/javadoc")

    options {
        title = "$project.name $project.version"
        header = title
        overview = "resources/javadoc/overview.html"
        bottom = file("resources/javadoc/bottom.html").text.replaceAll("@date@", "${date.format('yyyy')}")
        addStringOption('Xdoclint:none', '-quiet')
    }
}

distributions.main.contents {
    from 'README.md'
    into('lib') {
        from subprojects.configurations.compileClasspath
    }
    into('javadoc') {
        from allJavadoc
    }
    into('license') {
        from 'LICENSE'
    }
    into('samples') {
        from tasks.getByPath(':citygml4j-samples:copySamples')
    }
}

nexusPublishing {
    repositories {
        sonatype()
    }
}